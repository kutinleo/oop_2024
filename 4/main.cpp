/*
В высшей школе программирования и машинного обучения "Прогвартс" студенты традиционно разделяются по четырем факультетам: "Граф-файндер", "С-зерин", "Конфигран" и "Пайтондуй".
Разделение студентов по факультетам в этом учебном заведении выполняется распределительной нейронной сетью на основании их способностей и предрасположенностей. В результате своей работы нейронная сеть возвращает самый подходящий  факультет для переданного ей студента.
Однако, используемая приемной комиссией нейронная сеть работает медленно, а количество мест на направления обучения постоянно растет, поэтому в этом году было принято решение обновить систему распределения студентов, и вместо одной  нейронной сети запустить сразу 24.
Ваша задача состоит в том, чтобы обеспечить равномерную и эффективную загрузку всех предоставленных нейросетей при распределении студентов.

1. Реализовать функцию распределения, выполняющую распределение студентов по факультетам в многопоточном режиме согласно условию (5 баллов max).
2. В связи с напряженной политической обстановкой, руководство "Прогвартс" обеспокоилось, что в этом году на факультет “С-зерин” будет распределено слишком много людей и их будет некому обучать.
В результате было поставлено новое условие - на один и тот же факультет не может поступить более чем 1/3 всего набора (например, если всего поступает 300 человек, то ни на каком факультете не должно оказаться больше 100 человек). Если нейронная сеть распределила студента на факультет, на котором не осталось свободных мест, необходимо вместо этого распределить его на тот факультет, на котором в данный момент меньше всего студентов.
Модифицируйте алгоритм согласно новым условиям (5 баллов max).
3. После тестового запуска системы оказалось, что используемые для нейронных сетей сервера могут иногда перегреваться и отказывать в выполнении запроса.
В этом случае, согласно регламенту, необходимо оставить нейронную без нагрузки на ближайшие 5 минут, а предназначенных для нее студентов распределить по остальным сетям. При этом, когда все студенты будут обработаны, необходимо завершить выполнение программы распределения не дожидаясь остывания серверов.
Модифицируйте алгоритм согласно новым условиям (5 баллов max).
 */

// Перечисляемый тип факультетов
enum Faculty {
    graphfinder, czerin, configrun, pythondui, unknown
};

// Класс студента (реализация не важна для текущей задачи)
class Student;

// Функция, записывающая студента на заданный факультет
void assignFaculty(Student student, Faculty faculty);

// Функция, отправляющая запрос распределяющей сети под номером N
// Возвращает самый подходящий факультет для переданного студента
// Если сервер перегрелся, возвращает значение unknown
Faculty runNN(const Student &student, int N);

// Функция для распределения вектора студентов по факультетам
// Вам необходимо реализовать эту функцию!
void distribute(const std::vector<Student>& students);
//Примечание: все функции фреймворка являются потокобезопасными

